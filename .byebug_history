exit
current_node.prev
current_node
@tail
current_node.prev = new_node
new_node.prev
new_node
new_node.prev = current_node.prev
new_node.next = current_node
new_node = Node.new(data)
@tail
@head
current_node
continue
exit
@head
new_node.prev = current_node.prev
current_node.prev
new_node.next = current_node
new_node = Node.new(data)
current_node
continue
current_node
continue
current_node.nil?
continue
exit
continue
(1..1).each { |f| puts f }
(1..1).each do { |f| puts f }
continue
current_node
exit
current_node
@head.next
@size
current_node
continue
@size
continue
current_node
current_node.next
continue
current_node.next
current_node
continue
current_node
exit
@head.next
current_node
current_nod
(1..1).each{ |f| puts f}
(1..1).each{ |f| put f}
(1..1).count
(1..1).all
(1..1)
@head.next
@tail
current_node
continue
@head
current_node
continue
ll.tail.prev.prev
ll.tail.prev.pre
ll.tail.prev.data
ll.tail.prev
ll.tail.next
ll.tail
ll.head
continue
@tail
@head.next.next
@head.next
@head
current_node.next
current_node.prev
current_node
continue
current_node
